input {file {codec => "json" mode => "tail" path => "/file/path/logs.log" sincedb_path => "/file/db/path/bench.db" start_position => "beginning"} } filter {ruby { code => "event.set('processed_at', Time.now());"} ruby { code => "event.set('processed_at', Time.now());"}   if "esxi" in [tags] {    if [message] =~ "^.*?WaitForUpdatesDone" {      drop {}    }    else if [message] =~ "^.*?queryBatchPerformanceStatistics" {      drop {}    }    else if [message] =~ "^.*?vpxavpxaMoService" {      drop {}    }    else if [message] =~ "^.*?\[VpxaHalCnxHostagent::ProcessUpdate\]" {      drop {}    }    else if [message] =~ "^.*?Set internal stats for VM" {      drop {}    }  }}filter {ruby { code => "event.set('processed_at', Time.now());"}   if "esxi" in [tags] {    if [message] =~ "^.*?WaitForUpdatesDone" {      drop {}    }    else if [message] =~ "^.*?queryBatchPerformanceStatistics" {      drop {}    }    else if [message] =~ "^.*?vpxavpxaMoService" {      drop {}    }    else if [message] =~ "^.*?\[VpxaHalCnxHostagent::ProcessUpdate\]" {      drop {}    }    else if [message] =~ "^.*?Set internal stats for VM" {      drop {}    }  }} output {file {path => "/file/path/output.log"} }